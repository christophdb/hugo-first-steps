#!/bin/bash

# This script extracts Hugo alias redirects from generated HTML files
# and converts them into Caddy 301 redirect rules.
# It looks in the public directory for alias HTML files Hugo generated.

# Root directory of built site
SITE_DIR="src/public"

# Output file for Caddy redirects (can be changed or redirected outside)
REDIRECTS_FILE="caddy_redirects.conf"

# Clear or create the redirects file
echo "# Generated by generate-caddy-redirects.sh" > "$REDIRECTS_FILE"

# Find HTML files in SITE_DIR that may correspond to aliases
find "$SITE_DIR" -type f -name '*.html' | while read -r alias_file; do
    # Extract the alias path by trimming SITE_DIR prefix and index.html suffix
    alias_path="${alias_file#$SITE_DIR}"
    alias_path="${alias_path%index.html}"

    # Extract the actual redirect target from meta-refresh URL
    # Assumes meta refresh looks like: <meta http-equiv="refresh" content="0; url=https://example.com/target/">
    redirect_url=$(grep -oP 'content="0; url=\K[^"]+' "$alias_file")

    if [ -n "$redirect_url" ]; then
        # Extract path part from full URL (remove domain)
        redirect_path=$(echo "$redirect_url" | sed -E 's|https?://[^/]+||')

        # Output Caddy redirect rule: from alias_path to redirect_path with 301
        echo "redir $alias_path $redirect_path 301" >> "$REDIRECTS_FILE"
    fi
done
